<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head><script src="//archive.org/includes/analytics.js?v=cf34f82" type="text/javascript"></script>
<script type="text/javascript">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app220.us.archive.org';v.server_ms=285;archive_analytics.send_pageview({});});</script>
<script type="text/javascript" src="/_static/js/bundle-playback.js?v=MzYkZ0TU" charset="utf-8"></script>
<script type="text/javascript" src="/_static/js/wombat.js?v=UHAOicsW" charset="utf-8"></script>
<script type="text/javascript">
  __wm.init("https://web.archive.org/web");
  __wm.wombat("http://cliki.tunes.org:80/Linear%20Logic","20050414223422","https://web.archive.org/","web","/_static/",
	      "1113518062");
</script>
<link rel="stylesheet" type="text/css" href="/_static/css/banner-styles.css?v=S1zqJCYt" />
<link rel="stylesheet" type="text/css" href="/_static/css/iconochive.css?v=qtvMKcIJ" />
<!-- End Wayback Rewrite JS Include -->
<title>CTO : Linear Logic</title><link rel="alternate" type="application/rss+xml" title="Recent Changes" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/recent-changes.rdf"><link rel="stylesheet" href="https://web.archive.org/web/20050414223422cs_/http://cliki.tunes.org/admin/cliki.css"></head><body><div id="banner"><a title="CTO" class="logo" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/">CTO</a> <span>CLiki for the TUNES project</span></div><div id="navbar"><a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/index">Home</a> <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Recent%20Changes">Recent Changes</a> <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/CLiki">About CLiki</a> <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Text%20Formatting">Text Formatting</a> <a class="internal" onclick="if(name=window.prompt('New page name ([A-Za-z0-9 ])')) document.location='https://web.archive.org/web/20050414223422/http://cliki.tunes.org/edit/'+name ;return false;" href="/web/20050414223422/http://cliki.tunes.org/">Create New Page</a></div><div id="main"><h1>Linear Logic</h1>Linear Logic, which started as a theoretical endeavor in proof theory, is now a theme of study of its own. It is the <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/term">term</a> for the study of generalized <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/linear%20algebra">linear algebra</a>s over computational term algebras. It has ubiquitous applications in computer science: in proof theory, rewrite logic, compiler optimization, <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/memory">memory</a> management, concurrency control, security assessment, etc.

<p>Expressing computations with linear terms (with logical disjunction as the sum operator, and computational constructors as the product operators) is a very convenient and elegant way to cleanly express the semantics of objects taking into account resources (such as memory, time, etc) whose physical unicity prevents multiple instances of the objects from existing at the same time: the state of the system will be represented by terms that are linear in each of the (states of) the unique objects. The sums indicate that several possibilities are open as to the state of the system, upon which a choice may be made, depending on the place in space, the moment in time, and the fulfillment of various logical hypotheses; the products indicate combination of simpler resources into more elaborate states. Linear transformations are then computational operations that preserve the fact that at any time, each unique object has just one state, even though it may still be to decide which state this is among many. Stateful programming is precisely modeled by considering state transitions as pure linear transformers of the state, with linear variables corresponding to state and resources; in such context, immediate recycling optimization for the new value of a "same" variable corresponds to the physical address of the variable not moving with time.

<p>Linearity is a very useful tool in a wide range of situations, for a linear resource, one referenced at precisely one place and used just once, can be recycled immediately after its first and unique use, in real-time. It can be used in concurrent and distributed systems, to manage coherent access to a resource without expensive locking. It can be used in memory management to avoid costly garbage collection algorithms. It can be used in modular programming to assert security properties and negotiate resource responsibility. It can be used in real-time programming to assert real-time response of the system. It can be used in all cases for various compiler optimizations.

<p>Since linearity is a initially a syntactic property of programs, it can be easily checked by compilers as part of type-checking. It can be made user-visible as in <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Clean">Clean</a>, or in <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Haskell">Haskell</a> with <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/monad">monad</a>s; or it can be handled behind the scenes by the compiler, in a way that can take advantage of automatic optimizations independent from the user. But although user-invisibility may save the user from unnecessary choices (or protect him from harmful ones), it also prevents him from communicating deliberate choices, and thus the compiler might not be able to optimize out of inferred information for objects exported to separate compilation, dynamic linking, or dynamic code modification.

<p>In Tunes, we believe that linear constraints should be explicitly visible to users who care, because of their importance in distributed, concurrent and modular systems.

<p>See: user-visible typing of programs with linear types: the programming languages <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Clean">Clean</a>, <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Haskell">Haskell</a>, and <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Mercury">Mercury</a>; linearity in resource management and compiler optimization: articles by <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Henry%20Baker">Henry Baker</a>; linearity in <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/distributed">distributed</a> programming: the PhD thesis of <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Alan%20Bawden">Alan Bawden</a>, works by <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/A.%20Yonezawa">A. Yonezawa</a>'s team; linearity in compiler theory: articles by <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Philip%20Wadler">Philip Wadler</a>, lots of interpretation-based analyses done in optimizing compilers; the concept of linearity in rewrite systems: any basic course on <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/rewrite">rewrite</a> logic; etc.<hr><p><b>This page is linked from: </b> <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Aardappel">Aardappel</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Clean">Clean</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Constructor%20and%20Destructor">Constructor and Destructor</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Continuation">Continuation</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Forth">Forth</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Linear%20Graph%20Reduction">Linear Graph Reduction</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Linear%20Logic%20Comments">Linear Logic Comments</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Linearity%20101">Linearity 101</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Referential%20Transparency%20and%20State">Referential Transparency and State</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Sheep">Sheep</a> &nbsp; <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Vault">Vault</a> &nbsp; </div><div id="footer"><form action="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/admin/search"><a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/edit/Linear%20Logic">Edit page</a> | <a class="internal" href="https://web.archive.org/web/20050414223422/http://cliki.tunes.org/Linear%20Logic?source">View source</a> | Revisions: <b title="Thu, 18 Sep 2003 23:18:45 GMT">0</b>  | <input name="words" size="30"><input type="submit" value="search"></form><div id="disclaimer">CTO pages can be modified by anyone at anytime.
Imagine an appropriate disclaimer. Double it. Add two.</div></body></html></div><!--
     FILE ARCHIVED ON 22:34:22 Apr 14, 2005 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 06:14:07 Dec 18, 2022.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
<!--
playback timings (ms):
  captures_list: 207.884
  exclusion.robots: 0.084
  exclusion.robots.policy: 0.076
  RedisCDXSource: 0.701
  esindex: 0.008
  LoadShardBlock: 188.501 (3)
  PetaboxLoader3.datanode: 196.917 (4)
  CDXLines.iter: 15.856 (3)
  load_resource: 72.796
-->